version: '3'

services:

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    expose:
      - 5000
    ports:
      - "5000:5000"
    links:  
      - mongo_db:mongo_db
      - elasticsearch:elasticsearch
    depends_on:
      - mongo_db
    restart: always  
    volumes:
      - ./backend/codes:/usr/src/app
    command: gunicorn -w 1 -b 0.0.0.0:5000 -t 240 wsgi:app 
    stdin_open: true
    tty: true
    
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    expose:
      - 3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
#     stdin_open: true
#     tty: true
    restart: always
  
  mongo_db:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./mongo/db:/data/db
    ports:
      - "27017:27017"

  # mongo-seed: # 처음에 빌드할때 실행시킨이후에 주석처리하기!
  #   build: ./mongo-seed
  #   links:
  #     - mongo_db

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: "on-failure"

  elasticsearch:
    build: elasticsearch/
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "XPACK_SECURITY_ENABLED=false"
  
  prometheus:
    image: prom/prometheus:latest
    user: root
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana
    user: root
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always
